---
title: "Lab 6: Childcare Cost in California"
author: "Aida Aquino Arias"
format: html
execute: 
  echo: false
---
## The Data

In this lab we're going look at the median weekly cost of childcare in
California. A detailed description of the data can be found [here](https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-09/readme.md).

The data come to us from [TidyTuesday](https://github.com/rfordatascience/tidytuesday).

**0. Load the appropriate libraries and the data.**

```{r}
#| label: setup
#| echo: false
library(tidyverse)

```

```{r}
#| label: load-data

childcare_costs <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/childcare_costs.csv')

counties <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/counties.csv')
```

**1. Briefly describe the dataset (~ 4 sentences). What information does it contain?**
> The dataset contains the childcare price by childcare provider type, age of childre, and county. The years presented in the data are from 2008 to 2018. Although not ideal the data implies that "both parents" refer to one male and one female limiting some factors.

## California Childcare Costs

Let's start by focusing only on California. 

**2. Create a `ca_childcare` dataset of childcare costs in California, containing (1) county information and (2) just the year and childcare cost variable information from the `childcare_costs` dataset.** 

*Hint: There are 58 counties in CA and 11 years in the dataset. Therefore, your new dataset should have 53 x 11 = 638 observations. The final data set should have study year, median household income expressed in 2018 dollars, all the variables associated with full-time median price charged for Center-based Care, and California county names*

```{r}
#| label: ca-childcare-costs
ca_childcare <- childcare_costs |>
  left_join(counties, by =  "county_fips_code") |>
  filter(state_name == "California") |>
  select(county_name, study_year, mhi_2018, mcsa, c(mc_infant:mc_preschool)) 

print(ca_childcare)

#searched for the data in github to find the appropriate values. Joined the two data sets to get the appropriate variables into one set. Then sectioned out the needed variables.

```

**3. Using a function from the `forcats` package, complete the code below to create a new variable where each county is categorized into one of the [10 Census regions](https://census.ca.gov/regions/) in California. Use the Region description (from the plot), not the Region number. An example region has been started for you.**  

*Hint: This is probably a good place to use ChatGPT to reduce on tedious work. But you do need to know how to prompt ChatGPT to make it useful!*

```{r}
#| label: recoding-county-to-census-regions

ca_childcare <- ca_childcare |> 
  mutate(county_name = str_remove(county_name, " County")) |> 
  mutate(region = fct_collapse(county_name,
    'Superior California' = c("Butte", "Colusa", "El Dorado", "Glenn", "Lassen", "Modoc", "Nevada", "Placer", "Plumas", "Sacramento", "Shasta", "Sierra", "Siskiyou", "Sutter", "Tehama", "Yolo", "Yuba"), 
    'North Coast' = c("Del Norte", "Humboldt", "Lake", "Mendocino", "Napa", "Sonoma", "Trinity"),
    'San Francisco Bay Area' = c("Alameda", "Contra Costa", "Marin", "San Francisco", "San Mateo", "Santa Clara", "Solano"),
    'Northern San Joaquin Valley' = c("Alpine", "Amador", "Calaveras", "Madera", "Mariposa", "Merced", "Mono", "San Joaquin","Stanislaus", "Tuolumne"),
    'Central Coast' = c("Monterey", "San Benito", "San Luis Obispo", "Santa Barbara", "Santa Cruz", "Ventura"),
    'Southern San Joaquin Valley' = c("Fresno", "Inyo", "Kern", "Kings", "Tulare"),
    'Inland Empire' = c("Riverside", "San Bernardino"),
    'Los Angeles County' = c("Los Angeles"),
    'Orange County' = c("Orange"),
    'San Diego - Imperial' = c("Imperial", "San Diego")
     
    ))

#searched which function to use and then manually inputted the counties into their respective regions as stated by the census.
```


**4. Let's consider the median household income of each region, and how that income has changed over time. Create a table with ten rows, one for each region, and two columns, one for 2008 and one for 2018. The cells should contain the `median` of the median household income (expressed in 2018 dollars) of the `region` and the `study_year`. Arrange the rows by 2018 values.**

```{r}
#| label: median-income-by-region-over-time
# Hint: You will want to calculate the median of median income before you make columns for 2008/2018 by transforming the data

median_income <- ca_childcare |>
  group_by(region, study_year) |>
  summarize(median_income = median(mhi_2018)) |>
  filter(study_year %in% c(2008,2018)) |>
  pivot_wider(names_from = study_year, values_from = median_income)

print(median_income)

#used the R book to see which function fit best to use and make more columns
```


**5. Which California `region` had the lowest `median` full-time median weekly price for center-based childcare for infants in 2018? Does this `region` correspond to the `region` with the lowest `median` income in 2018 that you found in Q4?**  

*Hint: The code should give me the EXACT answer. This means having the code output the exact row(s) and variable(s) necessary for providing the solution. Consider the `slice()` functions.*

```{r}
#| label: lowest-median-weekly-price-201

lowest_median <- ca_childcare |>
  filter(study_year == 2018) |>
  group_by(region) |>
  summarize(infant_care = median(mc_infant)) |>
  slice_min(infant_care, n = 1)
  
print(lowest_median)

```

**6. Recreate the plot (look at online instructions) that shows, for all ten regions, the change over time of the full-time median price for center-based childcare for infants, toddlers, and preschoolers. Recreate the plot. You do not have to replicate the exact colors or theme, but your plot should have the same content, including the order of the facets and legend, reader-friendly labels, axes breaks, and a  smooth function.**


```{r}
#| label: recreate-plot
plot <- ca_childcare |>
  select(study_year, region, mc_infant, mc_toddler, mc_preschool) |>
pivot_longer(cols = c(mc_infant, mc_toddler, mc_preschool), 
             names_to = "age_group",
             values_to = "weekly_median") |>
  mutate(age_group = fct_recode(age_group, 
                                "Infant" = "mc_infant",
                                "Toddler" = "mc_toddler",
                                "Preschool" = "mc_preschool")) |>
  mutate(region = factor(region, levels = c("San Francisco Bay Area", "Orange County", "Los Angeles County", "Northern San Joaquin Valley", "Central Coast", "Inland Empire", "Superior California", "Southern San Joaquin Valley", "San Diego - Imperial", "North Coast")))
  
  
  

ggplot(plot, aes(x = study_year, y = weekly_median, color = region), show.legend = TRUE, width = 1) +
  geom_point(method = "loess", 
               span = 0.5,
               se = FALSE) +
  geom_smooth() +
  facet_wrap(~age_group, nrow = 1) +
  labs(title = "Weekly Median Price for Center-Based Childcare ($)",
       x = "Study Year",
       y = NULL,
       color = "California Region") +
  scale_x_continuous(breaks = seq(2008,2018, by = 2)) +
  scale_y_continuous(limits = c(100,500), breaks = seq(100,500, by = 100)) +
  theme_bw() +
  theme(aspect.ratio = 1)
#used the book to find the formats such as scale_x and scale_y and how to change the size of the charts.
```


